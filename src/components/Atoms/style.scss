@use '@/v.scss';

* {
  transition: all .25s ease-out;
  box-sizing: border-box;
}

// Text
@mixin text($n, $font) {
  font-size: 2rem * $n;
  font-family: var($font);
  line-height: 1;
}
.h1 {
  @include text(5, --sfBold);
}
.h2 {
  @include text(4, --sfSemibold);
}
.h3 {
  @include text(3, --sfMedium);
}
.p {
  @include text(2, --sfRegular);
}
.sm {
  @include text(1.5, --sfRegular);
}

// Elements
@mixin bg($bg, $color) {
  background-color: $bg;
  color: $color;
}
@mixin bg-hover($bg, $color) {
  @media (pointer: fine) {
    &:hover {
      @include bg($bg, $color);
    }
  }
}
@mixin ol($color) {
  outline-offset: -1 * v.$outlineWidth;
  outline: v.$outlineWidth solid $color;
  color: $color;
}
@mixin ol-hover($color) {
  @media (pointer: fine) {
    &:hover {
      @include ol($color);
    }
  }
}
@mixin line($color) {
  color: $color;
  border-bottom: v.$outlineWidth solid $color;
  border-radius: 0;
}
@mixin line-hover($color) {
  @media (pointer: fine) {
    &:hover {
      @include line($color);
    }
  }
}

// Buttons
.button {
  display: inline-flex;
  padding: 2rem 4rem;
  border-radius: v.$radius;
  cursor: pointer;
  gap: 2rem;
  align-items: center
}
.button-icon {
  @extend .button;
  padding: 2rem;
}

.button-segment {
  display: inline-flex;
  border-radius: v.$radius;
  .button {
    border-radius: 0;
    &:nth-last-child(1) {
      border-radius: 0 v.$radius v.$radius 0;
    }
    &:nth-child(1) {
      border-radius: v.$radius 0 0 v.$radius;
    }
    input {
      display: none;
    }
  }
}
.button-segment-bg-w {
  gap: v.$outlineWidth;
  background-color: v.$w2;
  .button:has(input:checked) {
    @include bg(v.$a, v.$w);
    @include bg-hover(v.$a2, v.$b);
  }
}
.button-segment-bg-b {
  gap: v.$outlineWidth;
  background-color: v.$b2;
  .button:has(input:checked) {
    @include bg(v.$a, v.$w);
    @include bg-hover(v.$a2, v.$b);
  } 
}
.button-segment-ol-w {
  .button:has(input:checked) {
    @include ol(v.$a);
    @include ol-hover(v.$a2);
  } 
}
.button-segment-ol-b {
  .button:has(input:checked) {
    @include ol(v.$a);
    @include ol-hover(v.$a2);
  } 
}

.button-bg-w {
  @include bg(v.$w, v.$b);
  @include bg-hover(v.$w2, v.$b2);
}
.button-bg-a {
  @include bg(v.$a, v.$w);
  @include bg-hover(v.$a2, v.$b);
}
.button-bg-b {
  @include bg(v.$b, v.$w);
  @include bg-hover(v.$b2, v.$w);
}
.button-ol-w {
  @include ol(v.$w);
  @include ol-hover(v.$w2);
}
.button-ol-a {
  @include ol(v.$a);
  @include ol-hover(v.$a2);
}
.button-ol-b {
  @include ol(v.$b);
  @include ol-hover(v.$b2);
}

// InputText
.input {
  display: inline-flex;
  padding: 2rem 4rem;
  border-radius: v.$radius;
  cursor: text;
  justify-content: space-between;
  align-items: center;
  --width: 50rem;
  width: var(--width);
  h3 {
    display: flex;
  }
  input {
    position: absolute;
    font: inherit;
    color: inherit;
    width: calc(var(--width) - 16rem);
    background-color: transparent;
    border: none;
    &:focus {
      outline: none;
    }
  }
  &.valid span, &:focus-within span  {
    opacity: 0;
  }
  &:has(input:invalid) {
    background-color: v.$error;
    color: v.$w;
  }
}
.input-hint {
  @extend .input;
  &.valid span, &:focus-within span  {
    @extend .sm;
    margin-top: -16rem;
    margin-left: -4rem;
    opacity: 1;
  }
}
.input-password {
  .eye {
    cursor: pointer;
  }
}
.input-placeholder {
  @extend .input;
  span {
    @extend .sm;
    margin-top: -16rem;
    margin-left: -4rem;
    color: v.$w;
  }
  &.valid span, &:focus-within span  {
    opacity: 1;
  }
  input::placeholder {
    color: inherit;
  }
}

.input-bg-w {
  @include bg(v.$w, v.$b);
  @include bg-hover(v.$w2, v.$b2);
  &.valid span {
    color: v.$w;
  }
  @media (pointer: fine) {
    &.valid:hover span {
      color: v.$w2;
    }
    &.input-placeholder:hover span {
      color: v.$w2;
    }
  }
  &:focus-within {
    @include bg(v.$a, v.$w);
    span {
      color: v.$a;
    }
  }
}
.input-bg-b {
  @include bg(v.$b, v.$w);
  @include bg-hover(v.$b2, v.$w2);
  &.valid span {
    color: v.$b;
  }
  @media (pointer: fine) {
    &.valid:hover span {
      color: v.$b2;
    }
    &.input-placeholder:hover span {
      color: v.$b2;
    }
  }
  &:focus-within {
    @include bg(v.$a, v.$w);
    span {
      color: v.$a;
    }
  }
}
.input-ol-w {
  @include ol(v.$w);
  @include ol-hover(v.$w2);
  @media (pointer: fine) {
    &:hover span {
      color: v.$w2;
    }
  }
  &:focus-within {
    @include ol(v.$a);
    span {
      color: v.$a;
    }
  }
}
.input-ol-b {
  @include ol(v.$b);
  @include ol-hover(v.$b2);
  @media (pointer: fine) {
    &:hover span {
      color: v.$b2;
    }
  }
  &:focus-within {
    @include ol(v.$a);
    span {
      color: v.$a;
    }
  }
}
.input-line-w {
  padding: 2rem 1rem;
  @include line(v.$w);
  @include line-hover(v.$w2);
  @media (pointer: fine) {
    &:hover span {
      color: v.$w2;
    }
  }
  &:focus-within {
    @include line(v.$a);
    span {
      color: v.$a;
    }
  }
  &.valid span, &:focus-within span, &.input-placeholder span {
    margin-left: -1rem;
    margin-top: -12rem;
  }
}
.input-line-b {
  padding: 2rem 1rem;
  @include line(v.$b);
  @include line-hover(v.$b2);
  @media (pointer: fine) {
    &:hover span {
      color: v.$b2;
    }
  }
  &:focus-within {
    @include line(v.$a);
    span {
      color: v.$a;
    }
  }
  &.valid span, &:focus-within span, &.input-placeholder span {
    margin-left: -1rem;
    margin-top: -12rem;
  }
}

// Other inputs
.checkbox-bg-w {
  @include bg(v.$w, v.$b);
  @include bg-hover(v.$w2, v.$b2);
  &:has(input:checked) {
    @include bg(v.$a, v.$w);
    @include bg-hover(v.$a2, v.$b);
  }
}
.checkbox-bg-b {
  @include bg(v.$b, v.$w);
  @include bg-hover(v.$b2, v.$w2);
  &:has(input:checked) {
    @include bg(v.$a, v.$w);
    @include bg-hover(v.$a2, v.$b);
  }
}
.checkbox-ol-w {
  @include ol(v.$w);
  @include ol-hover(v.$w2);
  &:has(input:checked) {
    @include ol(v.$a);
    @include ol-hover(v.$a2);
  }
}
.checkbox-ol-b {
  @include ol(v.$b);
  @include ol-hover(v.$b2);
  &:has(input:checked) {
    @include ol(v.$a);
    @include ol-hover(v.$a2);
  }
}
.radio-bg-w {
  @extend .checkbox-bg-w;
}
.radio-bg-b {
  @extend .checkbox-bg-b;
}
.radio-ol {
  &::before {
    content: '';
    display: block;
    border-radius: 50%;
    margin-top: 1.5rem;
    margin-left: 1.5rem;
    width: 3rem;
    height: 3rem;
    color: inherit;
    background-color: currentColor;
    opacity: 0;
    transition: all .25s ease-out;
  }
  &:has(input:checked) {
    &::before {
      opacity: 1;
    }
  }
}
.radio-ol-w {
  @extend .checkbox-ol-w, .radio-ol;
}
.radio-ol-b {
  @extend .checkbox-ol-b, .radio-ol;
}

// Checkbox
.checkbox {
  cursor: pointer;
  width: 6rem;
  height: 6rem;
  border-radius: 1rem;
  input {
    display: none;
  }
  svg {
    opacity: 0;
    position: absolute;
    width: inherit;
    height: inherit;
  }
  &:hover svg, &:has(input:checked) svg {
    opacity: 1;
  }
}

// Radio
.radio {
  width: 6rem;
  height: 6rem;
  border-radius: v.$radius;
  cursor: pointer;
  input {
    display: none;
  }
}

// Switch
.switch {
  display: inline-flex;
  width: 12rem;
  height: 6rem;
  cursor: pointer;
  align-items: center;
  padding: 1rem;
  border-radius: v.$radius;
  input {
    display: none;
  }
  span {
    width: 4rem;
    height: 4rem;
    background-color: currentColor;
    border-radius: v.$radius;
  }
  &:has(input:checked) span {
    margin-left: 6rem;
  }
}

// Link
.link {
  display: inline-flex;
  gap: 2rem;
  text-decoration: none;
}
.link-underline {
  @extend .link;
  &::after {
    background: currentColor;
    bottom: - v.$outlineWidth;
    content: "";
    display: block;
    height: v.$outlineWidth;
    width: 0;
    left: 0;
    position: absolute;
    transition: width .25s ease-out;
  }
  @media (pointer: fine) {
    &:hover {
      &::after {
        width: 100%;
      }
    }
  }
}
.link-w {
  color: v.$w;
  @media (pointer: fine) {
    &:hover {
      color: v.$w2;
    }
  }
}
.link-a {
  color: v.$a;
  @media (pointer: fine) {
    &:hover {
      color: v.$a2;
    }
  }
}
.link-b {
  color: v.$b;
  @media (pointer: fine) {
    &:hover {
      color: v.$b2;
    }
  }
}

// Accordion
.accordion {
  display: inline-flex;
  flex-direction: column;
  border-radius: v.$radius;
  padding: 0;
  gap: 0;
  width: 50rem;
  .accordion-name {
    justify-content: space-between;
    width: inherit;
    .xmark {
      transform: scale(0);
      position: absolute;
      right: 4rem;
    }
  }
  .accordion-name-open {
    .arrow {
      transform: scale(0);
    }
    .xmark {
      transform: scale(1);
    }
  }
  .accordion-text {
    opacity: 0;
    height: 0;
    width: inherit;
    transform: translateY(-10rem);
    z-index: -1;
  }
  .accordion-text-open {
    opacity: 1;
    height: auto;
    transform: translateY(0);
    z-index: 0;
    padding: 1rem 4rem;
  }
}

.accordion-bg-w {
  @include bg(v.$w, v.$b);
  .accordion-text-open {
    border-top: v.$outlineWidth solid v.$w2;
  }
}
.accordion-bg-a {
  @include bg(v.$a, v.$w);
  .accordion-text-open {
    border-top: v.$outlineWidth solid v.$a2;
  }
}
.accordion-bg-b {
  @include bg(v.$b, v.$w);
  .accordion-text-open {
    border-top: v.$outlineWidth solid v.$b2;
  }
}
.accordion-ol-w {
  @include ol(v.$w);
}
.accordion-ol-a {
  @include ol(v.$a);
}
.accordion-ol-b {
  @include ol(v.$b);
}
.accordion-line-w {
  @include line(v.$w);
  .accordion-name {
    padding: 2rem 1rem;
    .xmark {
      right: 1rem;
    }
    @media (pointer: fine) {
      &:hover {
        color: v.$w2;
      }
    }
  }
  .accordion-text-open {
    padding: 0 1rem 1rem;
  }
}
.accordion-line-a {
  @include line(v.$a);
  .accordion-name {
    padding: 2rem 1rem;
    .xmark {
      right: 1rem;
    }
    @media (pointer: fine) {
      &:hover {
        color: v.$a2;
      }
    }
  }
  .accordion-text-open {
    padding: 0 1rem 1rem;
  }
}
.accordion-line-b {
  @include line(v.$b);
  .accordion-name {
    padding: 2rem 1rem;
    .xmark {
      right: 1rem;
    }
    @media (pointer: fine) {
      &:hover {
        color: v.$b2;
      }
    }
  }
  .accordion-text-open {
    padding: 0 1rem 1rem;
  }
}

// Select
.select {
  display: inline-flex;
  flex-direction: column;
  border-radius: v.$radius;
  padding: 0;
  gap: 0;
  width: 50rem;
  .select-name {
    width: inherit;
    justify-content: space-between;
  }
  .select-name-open {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    svg{
      transform: rotate(180deg);
    }
  }
  .select-items {
    display: inline-flex;
    flex-direction: column;
    pointer-events: none;
    opacity: 0;
    width: inherit;
    border-top: v.$outlineWidth solid transparent;
    border-bottom-left-radius: v.$radius;
    border-bottom-right-radius: v.$radius;
    position: absolute;
    top: 0;
    .select-item {
      display: inline-flex;
      cursor: pointer;
      width: inherit;
      padding: 1rem 4rem;
      &:nth-last-child(1) {
        border-bottom-left-radius: v.$radius;
        border-bottom-right-radius: v.$radius;
      }
    }
  }
  .select-items-open {
    pointer-events: all;
    top: 10rem;
    opacity: 1;
    z-index: 3;
  }
}

.select-bg-w {
  .select-items {
    .select-item{
      @include bg(v.$w, v.$b);
      @include bg-hover(v.$w2, v.$b2);
    }
  }
  .select-items-open {
    border-top-color: v.$w2;
  }
}
.select-bg-a {
  .select-items {
    .select-item{
      @include bg(v.$a, v.$w);
      @include bg-hover(v.$a2, v.$b);
    }
  }
  .select-items-open {
    border-top-color: v.$a2;
  }
}
.select-bg-b {
  .select-items {
    .select-item{
      @include bg(v.$b, v.$w);
      @include bg-hover(v.$b2, v.$w2);
    }
  }
  .select-items-open {
    border-top-color: v.$b2;
  }
}
.select-ol-w {
  .select-items {
    margin-top: -2px;
    @include ol(v.$w);
    .select-item{
      color: v.$w;
      @include bg-hover(v.$w, v.$b);
    }
  }
}
.select-ol-a {
  .select-items {
    margin-top: -2px;
    @include ol(v.$a);
    .select-item{
      color: v.$a;
      @include bg-hover(v.$a, v.$w);
    }
  }
}
.select-ol-b {
  .select-items {
    margin-top: -2px;
    @include ol(v.$b);
    .select-item{
      color: v.$b;
      @include bg-hover(v.$b, v.$w);
    }
  }
}

// Tooltip
*:hover > .tooltip{
  z-index: 5;
  opacity: 1;
}
.tooltip {
  pointer-events: none;
  position: absolute;
  padding: 2rem;
  opacity: 0;
  z-index: -1;
  width: max-content;
  border-radius: 1rem;
}

.tooltip-w {
  @include bg(v.$w, v.$b);
}
.tooltip-a {
  @include bg(v.$a, v.$w);
}
.tooltip-b {
  @include bg(v.$b, v.$w);
}